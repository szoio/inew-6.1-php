<?php
/**
 * OpenRESTAPIDynamicDocumentationApiTest
 * PHP version 5
 *
 * @category Class
 * @package  iNew\Rest6_1
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Open REST API
 *
 * The Open REST API provides all available methods for integrators to access the I-New platform
 *
 * OpenAPI spec version: 6.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace iNew\Rest6_1;

use \iNew\Rest6_1\Configuration;
use \iNew\Rest6_1\ApiClient;
use \iNew\Rest6_1\ApiException;
use \iNew\Rest6_1\ObjectSerializer;

/**
 * OpenRESTAPIDynamicDocumentationApiTest Class Doc Comment
 *
 * @category Class
 * @package  iNew\Rest6_1
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OpenRESTAPIDynamicDocumentationApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationGetAvailableAdminTools
     *
     * returns the list of all available GUI admin tools for the given access key.
     *
     */
    public function testAdministrationRestExporterAdministrationGetAvailableAdminTools()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationGetAvailableSettings
     *
     * returns the list of all available GUI settings for the given access key.
     *
     */
    public function testAdministrationRestExporterAdministrationGetAvailableSettings()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationGetAvailableTags
     *
     * returns the list of all available tags for the provided version for the given access key.
     *
     */
    public function testAdministrationRestExporterAdministrationGetAvailableTags()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationGetAvailableVersions
     *
     * returns the list of all available API versions for the given access key.
     *
     */
    public function testAdministrationRestExporterAdministrationGetAvailableVersions()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationGetDisallowedOperations
     *
     * returns disallowed rest operations with explanation which rule(s) disallow them for the given access key.
     *
     */
    public function testAdministrationRestExporterAdministrationGetDisallowedOperations()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationGetOperationsOverview
     *
     * returns the definitions for all rest operations.
     *
     */
    public function testAdministrationRestExporterAdministrationGetOperationsOverview()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationRefreshSettingsCache
     *
     * invalidates the settings cache for single user (access key).
     *
     */
    public function testAdministrationRestExporterAdministrationRefreshSettingsCache()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationSendFeedback
     *
     * sends feedback to whoever it may concern with the given data.
     *
     */
    public function testAdministrationRestExporterAdministrationSendFeedback()
    {

    }

    /**
     * Test case for administrationRestExporterAdministrationUpdateSettings
     *
     * updates the settings for single user (access key).
     *
     */
    public function testAdministrationRestExporterAdministrationUpdateSettings()
    {

    }

}
