<?php
/**
 * BundleApiTest
 * PHP version 5
 *
 * @category Class
 * @package  iNew\Rest6_1
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Open REST API
 *
 * The Open REST API provides all available methods for integrators to access the I-New platform
 *
 * OpenAPI spec version: 6.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace iNew\Rest6_1;

use \iNew\Rest6_1\Configuration;
use \iNew\Rest6_1\ApiClient;
use \iNew\Rest6_1\ApiException;
use \iNew\Rest6_1\ObjectSerializer;

/**
 * BundleApiTest Class Doc Comment
 *
 * @category Class
 * @package  iNew\Rest6_1
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BundleApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for crceBundleAdministrationActivate
     *
     * activates the given bundle.
     *
     */
    public function testCrceBundleAdministrationActivate()
    {

    }

    /**
     * Test case for crceBundleAdministrationActivateSubscription
     *
     * activates the given bundle.
     *
     */
    public function testCrceBundleAdministrationActivateSubscription()
    {

    }

    /**
     * Test case for crceBundleAdministrationDeactivate
     *
     * deactivates the given bundle.
     *
     */
    public function testCrceBundleAdministrationDeactivate()
    {

    }

    /**
     * Test case for crceBundleAdministrationDeactivateSubscription
     *
     * deactivates the given bundle.
     *
     */
    public function testCrceBundleAdministrationDeactivateSubscription()
    {

    }

    /**
     * Test case for crceBundleAdministrationGet
     *
     * returns the requested bundle.
     *
     */
    public function testCrceBundleAdministrationGet()
    {

    }

    /**
     * Test case for crceBundleAdministrationGetActive
     *
     * returns the activated bundles for the given parameters.
     *
     */
    public function testCrceBundleAdministrationGetActive()
    {

    }

    /**
     * Test case for crceBundleAdministrationGetActiveSubscription
     *
     * returns the activated bundles for the given parameters.
     *
     */
    public function testCrceBundleAdministrationGetActiveSubscription()
    {

    }

    /**
     * Test case for crceBundleAdministrationGetAvailable
     *
     * returns the available bundles.
     *
     */
    public function testCrceBundleAdministrationGetAvailable()
    {

    }

    /**
     * Test case for crceBundleAdministrationGetAvailableSubscription
     *
     * returns the available bundles.
     *
     */
    public function testCrceBundleAdministrationGetAvailableSubscription()
    {

    }

    /**
     * Test case for crceBundleAdministrationGetAvailableTariff
     *
     * returns the available bundles.
     *
     */
    public function testCrceBundleAdministrationGetAvailableTariff()
    {

    }

    /**
     * Test case for crceBundleAdministrationGetBonus
     *
     * returns the available bonus bundles.
     *
     */
    public function testCrceBundleAdministrationGetBonus()
    {

    }

    /**
     * Test case for crceBundleAdministrationGetByReferenceId
     *
     * returns the requested bundle.
     *
     */
    public function testCrceBundleAdministrationGetByReferenceId()
    {

    }

    /**
     * Test case for crceBundleAdministrationGetGroups
     *
     * returns the requested bundle groups or subgroups if a groupCode was provided.
     *
     */
    public function testCrceBundleAdministrationGetGroups()
    {

    }

    /**
     * Test case for crceOnlinePaymentUpdateBundle
     *
     * updates the payment method for the given bundle.
     *
     */
    public function testCrceOnlinePaymentUpdateBundle()
    {

    }

    /**
     * Test case for crceOnlinePaymentUpdateBundleSubscription
     *
     * updates the payment method for the given bundle.
     *
     */
    public function testCrceOnlinePaymentUpdateBundleSubscription()
    {

    }

    /**
     * Test case for rtmRetailManagerActivateBundle
     *
     * activates the given bundle.
     *
     */
    public function testRtmRetailManagerActivateBundle()
    {

    }

    /**
     * Test case for rtmRetailManagerGetAvailableBundles
     *
     * returns the available bundles.
     *
     */
    public function testRtmRetailManagerGetAvailableBundles()
    {

    }

}
